<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yy47kq6u/wdJN+UPaCEkNAAAAABJRU5ErkJggg==
</value>
  </data>
</root>